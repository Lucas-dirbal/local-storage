{"ast":null,"code":"'use strict';\n\nfunction _createForOfIteratorHelperLoose(r, e) { var t = \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (t) return (t = t.call(r)).next.bind(t); if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && \"number\" == typeof r.length) { t && (r = t); var o = 0; return function () { return o >= r.length ? { done: !0 } : { done: !1, value: r[o++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) { n[e] = r[e]; } return n; }\nimport invariant from 'invariant';\nexport function createStringifySafeWithLimits(limits) {\n  var _limits$maxDepth = limits.maxDepth,\n    maxDepth = _limits$maxDepth === void 0 ? Number.POSITIVE_INFINITY : _limits$maxDepth,\n    _limits$maxStringLimi = limits.maxStringLimit,\n    maxStringLimit = _limits$maxStringLimi === void 0 ? Number.POSITIVE_INFINITY : _limits$maxStringLimi,\n    _limits$maxArrayLimit = limits.maxArrayLimit,\n    maxArrayLimit = _limits$maxArrayLimit === void 0 ? Number.POSITIVE_INFINITY : _limits$maxArrayLimit,\n    _limits$maxObjectKeys = limits.maxObjectKeysLimit,\n    maxObjectKeysLimit = _limits$maxObjectKeys === void 0 ? Number.POSITIVE_INFINITY : _limits$maxObjectKeys;\n  var stack = [];\n  function replacer(key, value) {\n    while (stack.length && this !== stack[0]) {\n      stack.shift();\n    }\n    if (typeof value === 'string') {\n      var truncatedString = '...(truncated)...';\n      if (value.length > maxStringLimit + truncatedString.length) {\n        return value.substring(0, maxStringLimit) + truncatedString;\n      }\n      return value;\n    }\n    if (typeof value !== 'object' || value === null) {\n      return value;\n    }\n    var retval = value;\n    if (Array.isArray(value)) {\n      if (stack.length >= maxDepth) {\n        retval = \"[ ... array with \" + value.length + \" values ... ]\";\n      } else if (value.length > maxArrayLimit) {\n        retval = value.slice(0, maxArrayLimit).concat([\"... extra \" + (value.length - maxArrayLimit) + \" values truncated ...\"]);\n      }\n    } else {\n      invariant(typeof value === 'object', 'This was already found earlier');\n      var keys = Object.keys(value);\n      if (stack.length >= maxDepth) {\n        retval = \"{ ... object with \" + keys.length + \" keys ... }\";\n      } else if (keys.length > maxObjectKeysLimit) {\n        retval = {};\n        for (var _iterator = _createForOfIteratorHelperLoose(keys.slice(0, maxObjectKeysLimit)), _step; !(_step = _iterator()).done;) {\n          var k = _step.value;\n          retval[k] = value[k];\n        }\n        var truncatedKey = '...(truncated keys)...';\n        retval[truncatedKey] = keys.length - maxObjectKeysLimit;\n      }\n    }\n    stack.unshift(retval);\n    return retval;\n  }\n  return function stringifySafe(arg) {\n    if (arg === undefined) {\n      return 'undefined';\n    } else if (arg === null) {\n      return 'null';\n    } else if (typeof arg === 'function') {\n      try {\n        return arg.toString();\n      } catch (e) {\n        return '[function unknown]';\n      }\n    } else if (arg instanceof Error) {\n      return arg.name + ': ' + arg.message;\n    } else {\n      try {\n        var ret = JSON.stringify(arg, replacer);\n        if (ret === undefined) {\n          return '[\"' + typeof arg + '\" failed to stringify]';\n        }\n        return ret;\n      } catch (e) {\n        if (typeof arg.toString === 'function') {\n          try {\n            return arg.toString();\n          } catch (E) {}\n        }\n      }\n    }\n    return '[\"' + typeof arg + '\" failed to stringify]';\n  };\n}\nvar stringifySafe = createStringifySafeWithLimits({\n  maxDepth: 10,\n  maxStringLimit: 100,\n  maxArrayLimit: 50,\n  maxObjectKeysLimit: 50\n});\nexport default stringifySafe;","map":{"version":3,"names":["_createForOfIteratorHelperLoose","r","e","t","Symbol","iterator","call","next","bind","Array","isArray","_unsupportedIterableToArray","length","o","done","value","TypeError","a","_arrayLikeToArray","toString","slice","constructor","name","from","test","n","invariant","createStringifySafeWithLimits","limits","_limits$maxDepth","maxDepth","Number","POSITIVE_INFINITY","_limits$maxStringLimi","maxStringLimit","_limits$maxArrayLimit","maxArrayLimit","_limits$maxObjectKeys","maxObjectKeysLimit","stack","replacer","key","shift","truncatedString","substring","retval","concat","keys","Object","_iterator","_step","k","truncatedKey","unshift","stringifySafe","arg","undefined","Error","message","ret","JSON","stringify","E"],"sources":["/workspaces/local-storage/node_modules/react-native/Libraries/Utilities/stringifySafe.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\n'use strict';\n\nimport invariant from 'invariant';\n\n/**\n * Tries to stringify with JSON.stringify and toString, but catches exceptions\n * (e.g. from circular objects) and always returns a string and never throws.\n */\nexport function createStringifySafeWithLimits(limits: {|\n  maxDepth?: number,\n  maxStringLimit?: number,\n  maxArrayLimit?: number,\n  maxObjectKeysLimit?: number,\n|}): mixed => string {\n  const {\n    maxDepth = Number.POSITIVE_INFINITY,\n    maxStringLimit = Number.POSITIVE_INFINITY,\n    maxArrayLimit = Number.POSITIVE_INFINITY,\n    maxObjectKeysLimit = Number.POSITIVE_INFINITY,\n  } = limits;\n  const stack = [];\n  function replacer(key: string, value: mixed): mixed {\n    while (stack.length && this !== stack[0]) {\n      stack.shift();\n    }\n\n    if (typeof value === 'string') {\n      const truncatedString = '...(truncated)...';\n      if (value.length > maxStringLimit + truncatedString.length) {\n        return value.substring(0, maxStringLimit) + truncatedString;\n      }\n      return value;\n    }\n    if (typeof value !== 'object' || value === null) {\n      return value;\n    }\n\n    let retval = value;\n    if (Array.isArray(value)) {\n      if (stack.length >= maxDepth) {\n        retval = `[ ... array with ${value.length} values ... ]`;\n      } else if (value.length > maxArrayLimit) {\n        retval = value\n          .slice(0, maxArrayLimit)\n          .concat([\n            `... extra ${value.length - maxArrayLimit} values truncated ...`,\n          ]);\n      }\n    } else {\n      // Add refinement after Array.isArray call.\n      invariant(typeof value === 'object', 'This was already found earlier');\n      let keys = Object.keys(value);\n      if (stack.length >= maxDepth) {\n        retval = `{ ... object with ${keys.length} keys ... }`;\n      } else if (keys.length > maxObjectKeysLimit) {\n        // Return a sample of the keys.\n        retval = {};\n        for (let k of keys.slice(0, maxObjectKeysLimit)) {\n          retval[k] = value[k];\n        }\n        const truncatedKey = '...(truncated keys)...';\n        retval[truncatedKey] = keys.length - maxObjectKeysLimit;\n      }\n    }\n    stack.unshift(retval);\n    return retval;\n  }\n\n  return function stringifySafe(arg: mixed): string {\n    if (arg === undefined) {\n      return 'undefined';\n    } else if (arg === null) {\n      return 'null';\n    } else if (typeof arg === 'function') {\n      try {\n        return arg.toString();\n      } catch (e) {\n        return '[function unknown]';\n      }\n    } else if (arg instanceof Error) {\n      return arg.name + ': ' + arg.message;\n    } else {\n      // Perform a try catch, just in case the object has a circular\n      // reference or stringify throws for some other reason.\n      try {\n        const ret = JSON.stringify(arg, replacer);\n        if (ret === undefined) {\n          return '[\"' + typeof arg + '\" failed to stringify]';\n        }\n        return ret;\n      } catch (e) {\n        if (typeof arg.toString === 'function') {\n          try {\n            // $FlowFixMe: toString shouldn't take any arguments in general.\n            return arg.toString();\n          } catch (E) {}\n        }\n      }\n    }\n    return '[\"' + typeof arg + '\" failed to stringify]';\n  };\n}\n\nconst stringifySafe: mixed => string = createStringifySafeWithLimits({\n  maxDepth: 10,\n  maxStringLimit: 100,\n  maxArrayLimit: 50,\n  maxObjectKeysLimit: 50,\n});\n\nexport default stringifySafe;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}