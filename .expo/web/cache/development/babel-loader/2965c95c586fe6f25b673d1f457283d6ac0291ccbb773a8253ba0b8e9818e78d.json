{"ast":null,"code":"'use strict';\n\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nvar Blob = require(\"./Blob\");\nvar BlobRegistry = require(\"./BlobRegistry\");\nimport NativeBlobModule from \"./NativeBlobModule\";\nimport invariant from 'invariant';\nfunction uuidv4() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    var r = Math.random() * 16 | 0,\n      v = c == 'x' ? r : r & 0x3 | 0x8;\n    return v.toString(16);\n  });\n}\nfunction createBlobCollector(blobId) {\n  if (global.__blobCollectorProvider == null) {\n    return null;\n  } else {\n    return global.__blobCollectorProvider(blobId);\n  }\n}\nvar BlobManager = function () {\n  function BlobManager() {\n    _classCallCheck(this, BlobManager);\n  }\n  _createClass(BlobManager, null, [{\n    key: \"createFromParts\",\n    value: function createFromParts(parts, options) {\n      invariant(NativeBlobModule, 'NativeBlobModule is available.');\n      var blobId = uuidv4();\n      var items = parts.map(function (part) {\n        if (part instanceof ArrayBuffer || global.ArrayBufferView && part instanceof global.ArrayBufferView) {\n          throw new Error(\"Creating blobs from 'ArrayBuffer' and 'ArrayBufferView' are not supported\");\n        }\n        if (part instanceof Blob) {\n          return {\n            data: part.data,\n            type: 'blob'\n          };\n        } else {\n          return {\n            data: String(part),\n            type: 'string'\n          };\n        }\n      });\n      var size = items.reduce(function (acc, curr) {\n        if (curr.type === 'string') {\n          return acc + global.unescape(encodeURI(curr.data)).length;\n        } else {\n          return acc + curr.data.size;\n        }\n      }, 0);\n      NativeBlobModule.createFromParts(items, blobId);\n      return BlobManager.createFromOptions({\n        blobId: blobId,\n        offset: 0,\n        size: size,\n        type: options ? options.type : '',\n        lastModified: options ? options.lastModified : Date.now()\n      });\n    }\n  }, {\n    key: \"createFromOptions\",\n    value: function createFromOptions(options) {\n      BlobRegistry.register(options.blobId);\n      return _extends(Object.create(Blob.prototype), {\n        data: options.__collector == null ? _objectSpread(_objectSpread({}, options), {}, {\n          __collector: createBlobCollector(options.blobId)\n        }) : options\n      });\n    }\n  }, {\n    key: \"release\",\n    value: function release(blobId) {\n      invariant(NativeBlobModule, 'NativeBlobModule is available.');\n      BlobRegistry.unregister(blobId);\n      if (BlobRegistry.has(blobId)) {\n        return;\n      }\n      NativeBlobModule.release(blobId);\n    }\n  }, {\n    key: \"addNetworkingHandler\",\n    value: function addNetworkingHandler() {\n      invariant(NativeBlobModule, 'NativeBlobModule is available.');\n      NativeBlobModule.addNetworkingHandler();\n    }\n  }, {\n    key: \"addWebSocketHandler\",\n    value: function addWebSocketHandler(socketId) {\n      invariant(NativeBlobModule, 'NativeBlobModule is available.');\n      NativeBlobModule.addWebSocketHandler(socketId);\n    }\n  }, {\n    key: \"removeWebSocketHandler\",\n    value: function removeWebSocketHandler(socketId) {\n      invariant(NativeBlobModule, 'NativeBlobModule is available.');\n      NativeBlobModule.removeWebSocketHandler(socketId);\n    }\n  }, {\n    key: \"sendOverSocket\",\n    value: function sendOverSocket(blob, socketId) {\n      invariant(NativeBlobModule, 'NativeBlobModule is available.');\n      NativeBlobModule.sendOverSocket(blob.data, socketId);\n    }\n  }]);\n  return BlobManager;\n}();\nBlobManager.isAvailable = !!NativeBlobModule;\nmodule.exports = BlobManager;","map":{"version":3,"names":["_defineProperty","_extends","_classCallCheck","_createClass","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","getOwnPropertyDescriptors","defineProperties","defineProperty","Blob","require","BlobRegistry","NativeBlobModule","invariant","uuidv4","replace","c","Math","random","v","toString","createBlobCollector","blobId","global","__blobCollectorProvider","BlobManager","key","value","createFromParts","parts","options","items","map","part","ArrayBuffer","ArrayBufferView","Error","data","type","String","size","reduce","acc","curr","unescape","encodeURI","createFromOptions","offset","lastModified","Date","now","register","create","prototype","__collector","release","unregister","has","addNetworkingHandler","addWebSocketHandler","socketId","removeWebSocketHandler","sendOverSocket","blob","isAvailable","module","exports"],"sources":["/workspaces/local-storage/node_modules/react-native/Libraries/Blob/BlobManager.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nconst Blob = require('./Blob');\nconst BlobRegistry = require('./BlobRegistry');\n\nimport type {BlobData, BlobOptions, BlobCollector} from './BlobTypes';\nimport NativeBlobModule from './NativeBlobModule';\nimport invariant from 'invariant';\n\n/*eslint-disable no-bitwise */\n/*eslint-disable eqeqeq */\n\n/**\n * Based on the rfc4122-compliant solution posted at\n * http://stackoverflow.com/questions/105034\n */\nfunction uuidv4(): string {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n    const r = (Math.random() * 16) | 0,\n      v = c == 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n}\n\n// **Temporary workaround**\n// TODO(#24654): Use turbomodules for the Blob module.\n// Blob collector is a jsi::HostObject that is used by native to know\n// when the a Blob instance is deallocated. This allows to free the\n// underlying native resources. This is a hack to workaround the fact\n// that the current bridge infra doesn't allow to track js objects\n// deallocation. Ideally the whole Blob object should be a jsi::HostObject.\nfunction createBlobCollector(blobId: string): BlobCollector | null {\n  if (global.__blobCollectorProvider == null) {\n    return null;\n  } else {\n    return global.__blobCollectorProvider(blobId);\n  }\n}\n\n/**\n * Module to manage blobs. Wrapper around the native blob module.\n */\nclass BlobManager {\n  /**\n   * If the native blob module is available.\n   */\n  static isAvailable: boolean = !!NativeBlobModule;\n\n  /**\n   * Create blob from existing array of blobs.\n   */\n  static createFromParts(\n    parts: Array<Blob | string>,\n    options?: BlobOptions,\n  ): Blob {\n    invariant(NativeBlobModule, 'NativeBlobModule is available.');\n\n    const blobId = uuidv4();\n    const items = parts.map(part => {\n      if (\n        part instanceof ArrayBuffer ||\n        (global.ArrayBufferView && part instanceof global.ArrayBufferView)\n      ) {\n        throw new Error(\n          \"Creating blobs from 'ArrayBuffer' and 'ArrayBufferView' are not supported\",\n        );\n      }\n      if (part instanceof Blob) {\n        return {\n          data: part.data,\n          type: 'blob',\n        };\n      } else {\n        return {\n          data: String(part),\n          type: 'string',\n        };\n      }\n    });\n    const size = items.reduce((acc, curr) => {\n      if (curr.type === 'string') {\n        return acc + global.unescape(encodeURI(curr.data)).length;\n      } else {\n        return acc + curr.data.size;\n      }\n    }, 0);\n\n    NativeBlobModule.createFromParts(items, blobId);\n\n    return BlobManager.createFromOptions({\n      blobId,\n      offset: 0,\n      size,\n      type: options ? options.type : '',\n      lastModified: options ? options.lastModified : Date.now(),\n    });\n  }\n\n  /**\n   * Create blob instance from blob data from native.\n   * Used internally by modules like XHR, WebSocket, etc.\n   */\n  static createFromOptions(options: BlobData): Blob {\n    BlobRegistry.register(options.blobId);\n    return Object.assign(Object.create(Blob.prototype), {\n      data:\n        // Reuse the collector instance when creating from an existing blob.\n        // This will make sure that the underlying resource is only deallocated\n        // when all blobs that refer to it are deallocated.\n        options.__collector == null\n          ? {\n              ...options,\n              __collector: createBlobCollector(options.blobId),\n            }\n          : options,\n    });\n  }\n\n  /**\n   * Deallocate resources for a blob.\n   */\n  static release(blobId: string): void {\n    invariant(NativeBlobModule, 'NativeBlobModule is available.');\n\n    BlobRegistry.unregister(blobId);\n    if (BlobRegistry.has(blobId)) {\n      return;\n    }\n    NativeBlobModule.release(blobId);\n  }\n\n  /**\n   * Inject the blob content handler in the networking module to support blob\n   * requests and responses.\n   */\n  static addNetworkingHandler(): void {\n    invariant(NativeBlobModule, 'NativeBlobModule is available.');\n\n    NativeBlobModule.addNetworkingHandler();\n  }\n\n  /**\n   * Indicate the websocket should return a blob for incoming binary\n   * messages.\n   */\n  static addWebSocketHandler(socketId: number): void {\n    invariant(NativeBlobModule, 'NativeBlobModule is available.');\n\n    NativeBlobModule.addWebSocketHandler(socketId);\n  }\n\n  /**\n   * Indicate the websocket should no longer return a blob for incoming\n   * binary messages.\n   */\n  static removeWebSocketHandler(socketId: number): void {\n    invariant(NativeBlobModule, 'NativeBlobModule is available.');\n\n    NativeBlobModule.removeWebSocketHandler(socketId);\n  }\n\n  /**\n   * Send a blob message to a websocket.\n   */\n  static sendOverSocket(blob: Blob, socketId: number): void {\n    invariant(NativeBlobModule, 'NativeBlobModule is available.');\n\n    NativeBlobModule.sendOverSocket(blob.data, socketId);\n  }\n}\n\nmodule.exports = BlobManager;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}