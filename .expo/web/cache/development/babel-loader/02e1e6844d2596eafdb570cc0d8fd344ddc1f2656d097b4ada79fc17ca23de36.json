{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(t) { var r = _isNativeReflectConstruct(); return function () { var e, o = _getPrototypeOf(t); if (r) { var s = _getPrototypeOf(this).constructor; e = Reflect.construct(o, arguments, s); } else e = o.apply(this, arguments); return _possibleConstructorReturn(this, e); }; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nimport NativeDevSettings from \"../NativeModules/specs/NativeDevSettings\";\nimport NativeEventEmitter from \"../EventEmitter/NativeEventEmitter\";\nvar DevSettings = function (_NativeEventEmitter) {\n  _inherits(DevSettings, _NativeEventEmitter);\n  var _super = _createSuper(DevSettings);\n  function DevSettings() {\n    var _this;\n    _classCallCheck(this, DevSettings);\n    _this = _super.call(this, NativeDevSettings);\n    _this._menuItems = new Map();\n    return _this;\n  }\n  _createClass(DevSettings, [{\n    key: \"addMenuItem\",\n    value: function addMenuItem(title, handler) {\n      var oldHandler = this._menuItems.get(title);\n      if (oldHandler != null) {\n        this.removeListener('didPressMenuItem', oldHandler);\n      } else {\n        NativeDevSettings.addMenuItem(title);\n      }\n      this._menuItems.set(title, handler);\n      this.addListener('didPressMenuItem', function (event) {\n        if (event.title === title) {\n          handler();\n        }\n      });\n    }\n  }, {\n    key: \"reload\",\n    value: function reload(reason) {\n      if (typeof NativeDevSettings.reloadWithReason === 'function') {\n        NativeDevSettings.reloadWithReason(reason != null ? reason : 'Uncategorized from JS');\n      } else {\n        NativeDevSettings.reload();\n      }\n    }\n  }, {\n    key: \"onFastRefresh\",\n    value: function onFastRefresh() {\n      if (typeof NativeDevSettings.onFastRefresh === 'function') {\n        NativeDevSettings.onFastRefresh();\n      }\n    }\n  }]);\n  return DevSettings;\n}(NativeEventEmitter);\nvar NoopDevSettings = function () {\n  function NoopDevSettings() {\n    _classCallCheck(this, NoopDevSettings);\n  }\n  _createClass(NoopDevSettings, [{\n    key: \"addMenuItem\",\n    value: function addMenuItem(title, handler) {}\n  }, {\n    key: \"reload\",\n    value: function reload(reason) {}\n  }, {\n    key: \"onFastRefresh\",\n    value: function onFastRefresh() {}\n  }]);\n  return NoopDevSettings;\n}();\nmodule.exports = __DEV__ ? new DevSettings() : new NoopDevSettings();","map":{"version":3,"names":["NativeDevSettings","NativeEventEmitter","DevSettings","_NativeEventEmitter","_inherits","_super","_createSuper","_this","_classCallCheck","call","_menuItems","Map","_createClass","key","value","addMenuItem","title","handler","oldHandler","get","removeListener","set","addListener","event","reload","reason","reloadWithReason","onFastRefresh","NoopDevSettings","module","exports","__DEV__"],"sources":["/workspaces/local-storage/node_modules/react-native/Libraries/Utilities/DevSettings.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\nimport NativeDevSettings from '../NativeModules/specs/NativeDevSettings';\nimport NativeEventEmitter from '../EventEmitter/NativeEventEmitter';\n\ninterface IDevSettings {\n  addMenuItem(title: string, handler: () => mixed): void;\n  reload(reason?: string): void;\n  onFastRefresh(): void;\n}\n\nclass DevSettings extends NativeEventEmitter implements IDevSettings {\n  _menuItems: Map<string, () => mixed>;\n\n  constructor() {\n    super(NativeDevSettings);\n\n    this._menuItems = new Map();\n  }\n\n  addMenuItem(title: string, handler: () => mixed) {\n    // Make sure items are not added multiple times. This can\n    // happen when hot reloading the module that registers the\n    // menu items. The title is used as the id which means we\n    // don't support multiple items with the same name.\n    const oldHandler = this._menuItems.get(title);\n    if (oldHandler != null) {\n      this.removeListener('didPressMenuItem', oldHandler);\n    } else {\n      NativeDevSettings.addMenuItem(title);\n    }\n\n    this._menuItems.set(title, handler);\n    this.addListener('didPressMenuItem', event => {\n      if (event.title === title) {\n        handler();\n      }\n    });\n  }\n\n  reload(reason?: string) {\n    if (typeof NativeDevSettings.reloadWithReason === 'function') {\n      NativeDevSettings.reloadWithReason(reason ?? 'Uncategorized from JS');\n    } else {\n      NativeDevSettings.reload();\n    }\n  }\n\n  onFastRefresh() {\n    if (typeof NativeDevSettings.onFastRefresh === 'function') {\n      NativeDevSettings.onFastRefresh();\n    }\n  }\n\n  // TODO: Add other dev setting methods exposed by the native module.\n}\n\n// Avoid including the full `NativeDevSettings` class in prod.\nclass NoopDevSettings implements IDevSettings {\n  addMenuItem(title: string, handler: () => mixed) {}\n  reload(reason?: string) {}\n  onFastRefresh() {}\n}\n\nmodule.exports = ((__DEV__\n  ? new DevSettings()\n  : new NoopDevSettings()): IDevSettings);\n"],"mappings":";;;;;;;AAUA,OAAOA,iBAAiB;AACxB,OAAOC,kBAAkB;AAA2C,IAQ9DC,WAAW,aAAAC,mBAAA;EAAAC,SAAA,CAAAF,WAAA,EAAAC,mBAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,WAAA;EAGf,SAAAA,YAAA,EAAc;IAAA,IAAAK,KAAA;IAAAC,eAAA,OAAAN,WAAA;IACZK,KAAA,GAAAF,MAAA,CAAAI,IAAA,OAAMT,iBAAiB;IAEvBO,KAAA,CAAKG,UAAU,GAAG,IAAIC,GAAG,CAAC,CAAC;IAAC,OAAAJ,KAAA;EAC9B;EAACK,YAAA,CAAAV,WAAA;IAAAW,GAAA;IAAAC,KAAA,EAED,SAAAC,YAAYC,KAAa,EAAEC,OAAoB,EAAE;MAK/C,IAAMC,UAAU,GAAG,IAAI,CAACR,UAAU,CAACS,GAAG,CAACH,KAAK,CAAC;MAC7C,IAAIE,UAAU,IAAI,IAAI,EAAE;QACtB,IAAI,CAACE,cAAc,CAAC,kBAAkB,EAAEF,UAAU,CAAC;MACrD,CAAC,MAAM;QACLlB,iBAAiB,CAACe,WAAW,CAACC,KAAK,CAAC;MACtC;MAEA,IAAI,CAACN,UAAU,CAACW,GAAG,CAACL,KAAK,EAAEC,OAAO,CAAC;MACnC,IAAI,CAACK,WAAW,CAAC,kBAAkB,EAAE,UAAAC,KAAK,EAAI;QAC5C,IAAIA,KAAK,CAACP,KAAK,KAAKA,KAAK,EAAE;UACzBC,OAAO,CAAC,CAAC;QACX;MACF,CAAC,CAAC;IACJ;EAAC;IAAAJ,GAAA;IAAAC,KAAA,EAED,SAAAU,OAAOC,MAAe,EAAE;MACtB,IAAI,OAAOzB,iBAAiB,CAAC0B,gBAAgB,KAAK,UAAU,EAAE;QAC5D1B,iBAAiB,CAAC0B,gBAAgB,CAACD,MAAM,WAANA,MAAM,GAAI,uBAAuB,CAAC;MACvE,CAAC,MAAM;QACLzB,iBAAiB,CAACwB,MAAM,CAAC,CAAC;MAC5B;IACF;EAAC;IAAAX,GAAA;IAAAC,KAAA,EAED,SAAAa,cAAA,EAAgB;MACd,IAAI,OAAO3B,iBAAiB,CAAC2B,aAAa,KAAK,UAAU,EAAE;QACzD3B,iBAAiB,CAAC2B,aAAa,CAAC,CAAC;MACnC;IACF;EAAC;EAAA,OAAAzB,WAAA;AAAA,EAzCuBD,kBAAkB;AAAA,IA+CtC2B,eAAe;EAAA,SAAAA,gBAAA;IAAApB,eAAA,OAAAoB,eAAA;EAAA;EAAAhB,YAAA,CAAAgB,eAAA;IAAAf,GAAA;IAAAC,KAAA,EACnB,SAAAC,YAAYC,KAAa,EAAEC,OAAoB,EAAE,CAAC;EAAC;IAAAJ,GAAA;IAAAC,KAAA,EACnD,SAAAU,OAAOC,MAAe,EAAE,CAAC;EAAC;IAAAZ,GAAA;IAAAC,KAAA,EAC1B,SAAAa,cAAA,EAAgB,CAAC;EAAC;EAAA,OAAAC,eAAA;AAAA;AAGpBC,MAAM,CAACC,OAAO,GAAKC,OAAO,GACtB,IAAI7B,WAAW,CAAC,CAAC,GACjB,IAAI0B,eAAe,CAAC,CAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}